function CircleGame.new 0
push constant 54
call Memory.alloc 1
pop pointer 0
push constant 255
push constant 200
push constant 10
call Circle.new 3
pop this 0
push constant 10
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 2
push constant 70
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 3
push constant 130
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 4
push constant 190
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 5
push constant 250
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 6
push constant 310
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 7
push constant 370
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 8
push constant 430
push constant 10
push constant 50
push constant 10
call Square.new 4
pop this 9
push constant 25
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 10
push constant 90
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 11
push constant 155
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 12
push constant 215
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 13
push constant 275
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 14
push constant 335
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 15
push constant 395
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 16
push constant 455
push constant 30
push constant 50
push constant 10
call Square.new 4
pop this 17
push constant 10
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 18
push constant 70
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 19
push constant 130
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 20
push constant 190
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 21
push constant 250
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 22
push constant 310
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 23
push constant 370
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 24
push constant 430
push constant 50
push constant 50
push constant 10
call Square.new 4
pop this 25
push constant 10
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 26
push constant 70
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 27
push constant 130
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 28
push constant 190
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 29
push constant 250
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 30
push constant 310
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 31
push constant 370
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 32
push constant 430
push constant 70
push constant 50
push constant 10
call Square.new 4
pop this 33
push constant 10
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 34
push constant 70
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 35
push constant 130
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 36
push constant 190
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 37
push constant 250
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 38
push constant 310
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 39
push constant 370
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 40
push constant 430
push constant 90
push constant 50
push constant 10
call Square.new 4
pop this 41
push constant 10
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 42
push constant 70
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 43
push constant 130
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 44
push constant 190
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 45
push constant 250
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 46
push constant 310
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 47
push constant 370
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 48
push constant 430
push constant 110
push constant 50
push constant 10
call Square.new 4
pop this 49
push constant 48
pop this 51
push this 51
call Array.new 1
pop this 50
push constant 0
push this 50
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 50
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 50
add
push this 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 50
add
push this 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 50
add
push this 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 50
add
push this 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 50
add
push this 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 50
add
push this 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 50
add
push this 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 50
add
push this 11
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push this 50
add
push this 12
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push this 50
add
push this 13
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push this 50
add
push this 14
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push this 50
add
push this 15
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push this 50
add
push this 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push this 50
add
push this 17
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
push this 50
add
push this 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 17
push this 50
add
push this 19
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 18
push this 50
add
push this 20
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 19
push this 50
add
push this 21
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 20
push this 50
add
push this 22
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 21
push this 50
add
push this 23
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 22
push this 50
add
push this 24
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 23
push this 50
add
push this 25
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 24
push this 50
add
push this 26
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 25
push this 50
add
push this 27
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 26
push this 50
add
push this 28
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 27
push this 50
add
push this 29
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 28
push this 50
add
push this 30
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 29
push this 50
add
push this 31
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 30
push this 50
add
push this 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 31
push this 50
add
push this 33
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 32
push this 50
add
push this 34
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 33
push this 50
add
push this 35
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 34
push this 50
add
push this 36
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 35
push this 50
add
push this 37
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 36
push this 50
add
push this 38
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 37
push this 50
add
push this 39
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 38
push this 50
add
push this 40
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 39
push this 50
add
push this 41
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 40
push this 50
add
push this 42
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 41
push this 50
add
push this 43
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 42
push this 50
add
push this 44
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 43
push this 50
add
push this 45
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 44
push this 50
add
push this 46
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 45
push this 50
add
push this 47
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 46
push this 50
add
push this 48
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 47
push this 50
add
push this 49
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 1
push constant 0
call Scoreboard.new 1
pop this 52
push pointer 0
return
function CircleGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Circle.dispose 1
pop temp 0
push this 52
call Scoreboard.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function CircleGame.moveCircle 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 51
lt
not
if-goto WHILE_END0
push local 0
push this 50
add
pop pointer 1
push that 0
pop local 1
push this 0
push local 1
call Circle.intersects 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Square.erase 1
pop temp 0
push constant 0
not
pop local 2
push this 52
push constant 10
call Scoreboard.addScore 2
pop temp 0
push this 52
call Scoreboard.getScore 1
push this 51
push constant 10
call Math.multiply 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 15
push constant 25
call Output.moveCursor 2
pop temp 0
push constant 8
call String.new 1
push constant 89
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 87
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
not
pop this 53
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push constant 1
push local 0
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 1
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Circle.moveUp 1
pop temp 0
push local 2
push this 0
call Circle.currY 1
push constant 1
lt
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop this 1
push constant 0
return
label IF_FALSE3
label IF_FALSE2
push this 1
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
call Circle.moveDown 1
pop temp 0
push local 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
pop this 1
push constant 0
return
label IF_FALSE5
push this 0
call Circle.currY 1
push this 0
call Circle.currRad 1
push constant 2
call Math.multiply 2
add
push constant 253
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 15
push constant 25
call Output.moveCursor 2
pop temp 0
push constant 11
call String.new 1
push constant 89
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 46
call String.appendChar 2
push constant 46
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
not
pop this 53
push constant 0
return
label IF_FALSE6
label IF_FALSE4
push this 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
call Circle.moveLeft 1
pop temp 0
push local 2
push this 0
call Circle.currX 1
push constant 1
lt
or
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 4
pop this 1
push constant 0
return
label IF_FALSE8
label IF_FALSE7
push this 1
push constant 4
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 0
call Circle.moveRight 1
pop temp 0
push local 2
push this 0
call Circle.currX 1
push constant 2
push this 0
call Circle.currRad 1
call Math.multiply 2
add
push constant 509
gt
or
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 3
pop this 1
push constant 0
return
label IF_FALSE10
label IF_FALSE9
push constant 0
return
function CircleGame.run 1
push argument 0
pop pointer 0
push constant 0
pop this 53
label WHILE_EXP0
push this 53
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call CircleGame.moveCircle 1
pop temp 0
push this 53
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 53
label IF_FALSE1
push local 0
push constant 90
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Circle.decSize 1
pop temp 0
label IF_FALSE2
push local 0
push constant 88
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Circle.incSize 1
pop temp 0
label IF_FALSE3
push local 0
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
pop this 1
label IF_FALSE4
push local 0
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
pop this 1
label IF_FALSE5
push local 0
push constant 130
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
pop this 1
label IF_FALSE6
push local 0
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 4
pop this 1
label IF_FALSE7
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call CircleGame.moveCircle 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
